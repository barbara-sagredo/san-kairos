<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>asmt_assessment_instance_question</collection>
        <condition/>
        <description>Se calcula el promedio, se debe ignorar las preguntas con respuesta NA</description>
        <execute_function>false</execute_function>
        <filter_condition table="asmt_assessment_instance_question">category=1c9464a11bd750d0d8d6b887cc4bcb08^EQ<item display_table="asmt_metric_category" display_value="Encuesta TÃ©rmino de proyecto" endquery="false" field="category" goto="false" newquery="false" operator="=" or="false" value="1c9464a11bd750d0d8d6b887cc4bcb08"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>SLX Promedio Proyecto</name>
        <order>120</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

	//se crean las variables
    var suma = 0;
    var cont = 0;
    var prom = 0;

	//gliderecord a assessment instance question donde ignore la pregunta de comentario
    var ent = new GlideRecord('asmt_assessment_instance_question');
    ent.addQuery('instance=' + current.instance + '^metric.order!=1000');
	ent.addQuery('value','!=','');
    ent.query();

	//por cada pregunta se ira sumando un contador y se excluiran las respuestas NA o -1
    while (ent.next()) {
        if (ent.value != -1) {
            cont++;
            suma += ent.value;
        }

    }


	//gliderecord a encuesta de proyecto
    var gr = new GlideRecord('x_hocsa_san_encuesta_de_proyecto');
    gr.addQuery('u_slx_encuesta', ent.instance);
    gr.query();
    if (gr.next()) {

        if (cont > 0) {
           //se setan los campos suma y contador, estos campos son de apoyo, y estan ocultos
            gr.u_slx_suma = suma;
            gr.u_slx_cont = cont;
            prom = (suma / cont);
            //Se setea el campo promedio por la variable promedio

            gr.u_slx_promedio_obtenido = prom;
            gr.update();



        } else {
            gr.u_slx_promedio = 0;
            gr.update();


        }
    }

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>slx.bs</sys_created_by>
        <sys_created_on>2020-09-17 19:00:53</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>df446af51b179cd0d8d6b887cc4bcb48</sys_id>
        <sys_mod_count>12</sys_mod_count>
        <sys_name>SLX Promedio Proyecto</sys_name>
        <sys_overrides/>
        <sys_package display_value="san" source="x_hocsa_san">b3538a711ba598108802dac2cd4bcb8e</sys_package>
        <sys_policy/>
        <sys_scope display_value="san">b3538a711ba598108802dac2cd4bcb8e</sys_scope>
        <sys_update_name>sys_script_df446af51b179cd0d8d6b887cc4bcb48</sys_update_name>
        <sys_updated_by>slx.bs</sys_updated_by>
        <sys_updated_on>2020-09-22 00:21:38</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=df446af51b179cd0d8d6b887cc4bcb48"/>
</record_update>
